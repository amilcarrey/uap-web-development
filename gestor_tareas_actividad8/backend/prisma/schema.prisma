// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String        @id @default(uuid())
  email    String        @unique
  name     String
  password String
  boards   Board[]       @relation("UserBoards")
  createdAt DateTime @default(now())
  shared   SharedBoard[]
  settings UserSettings?
}

model Board {
  id        String        @id @default(uuid())
  name      String
  owner     User          @relation("UserBoards", fields: [ownerId], references: [id])
  ownerId   String
  tasks     Task[]
  shared    SharedBoard[]
  createdAt DateTime      @default(now())
}

model SharedBoard {
  id       String   @id @default(cuid())
  userId   String
  boardId  String
  role     Role

  user     User     @relation(fields: [userId], references: [id])
  board    Board    @relation(fields: [boardId], references: [id])

  @@unique([userId, boardId], name: "userId_boardId") 
}

model Task {
  id        String   @id @default(uuid())
  text      String
  completed Boolean  @default(false)
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   String
  createdAt DateTime @default(now())
}

model UserSettings {
  id                    String  @id @default(uuid())
  user                  User    @relation(fields: [userId], references: [id])
  userId                String  @unique
  refetchInterval       Int     @default(10)
  uppercaseDescriptions Boolean @default(false)
}

enum Role {
  OWNER
  EDITOR
  VIEWER
}
