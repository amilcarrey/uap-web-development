# Entregables

1. URL de la aplicación deployada

https://app-libros-10.vercel.app/


2. Repositorio GitHub

https://github.com/HarrysonLadines/APPLibros


3. Documentación
a) Cómo hacer el deploy local

Clonar el repositorio:

git clone https://github.com/HarrysonLadines/APPLibros.git


Entrar en la carpeta del proyecto:

cd APPLibros


Instalar dependencias:

npm install


Generar Prisma Client:

npx prisma generate


Correr el proyecto en modo desarrollo:

npm run dev


b) Cómo funcionan los GitHub Actions

Cada Pull Request y push a main dispara los workflows de CI/CD.

Los workflows ejecutan:

Build: Verifica que la aplicación compile correctamente.

Tests: Ejecuta todos los tests unitarios. Nota: el workflow test.yml tuvo un problema de compatibilidad de versiones que provocó la eliminación de algunos archivos de tests, pero no afecta la funcionalidad de la aplicación.

Docker: Construye y publica una imagen de la aplicación en GitHub Container Registry (ghcr.io) al hacer merge a main.

Los workflows se encuentran en .github/workflows.


c) Variables de entorno necesarias

DATABASE_URL: URL de conexión a la base de datos PostgreSQL en Supabase.


d) Instrucciones para ejecutar con Docker

Construir la imagen:

docker build -t mi-app .


Correr la imagen:

docker run -p 3000:3000 mi-app


El Dockerfile se encuentra en la raíz del proyecto (./Dockerfile).

La aplicación estará disponible en http://localhost:3000.


4. Estado de GitHub Actions

Todos los workflows se ejecutan correctamente, excepto el de tests (test.yml) debido a un problema de versiones.

Los workflows de build y Docker funcionan y están verificados.

Esto asegura que cualquier cambio en el repositorio se valide automáticamente antes de mergear a main.


5. Notas adicionales

La aplicación está deployada en Vercel y conectada a la base de datos Supabase con todas las tablas necesarias ya creadas.

La app funciona correctamente en producción, incluyendo la funcionalidad de reseñas y votaciones.