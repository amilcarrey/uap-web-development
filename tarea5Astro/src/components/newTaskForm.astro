<new-task-form>
    <form
      action="/api/tasks"
      method="post"
      class="flex justify-center items-center bg-[#faebd7] rounded-xl mx-auto w-3/5 p-3 gap-3 mb-5"
    >
      <input
        class="border border-gray-300 rounded px-3 py-1 flex-grow"
        type="text"
        name="content"
        placeholder="Contenido del mensaje"
      />
      <button
        class="bg-[#7fffd4]l hover:bg-teal-300 px-4 py-1 rounded"
        type="submit"
      >
        Add
      </button>
    </form>
  </new-task-form>
  
  <script>
    import type { Task } from "../types";
    import type { TaskList } from "./TaskList.astro.0.mts";
  
    class NewTaskForm extends HTMLElement {
      private form: HTMLFormElement | null = null;
      private input: HTMLInputElement | null = null;
      private taskList: TaskList | null = null;
  
      connectedCallback() {
        this.form = this.querySelector("form");
        this.input = this.querySelector("input");
        this.taskList = document.querySelector("task-list");
        this.form!.addEventListener("submit", this.handleCreateNewTask);
      }
  
      handleCreateNewTask = async (e: SubmitEvent) => {
        e.preventDefault();
        const content = this.input?.value;
        if (!content) return;
  
        this.input!.value = "";
  
        const response = await fetch("/api/tasks", {
          method: "POST",
          body: JSON.stringify({ action: "nuevatarea", content}),
          headers: {
            "Content-Type": "application/json",
          },
        });
  
        const data: { tarea: Task } = await response.json();
        this.taskList?.addTarea(data.tarea);
      };
    }
  
    customElements.define("new-task-form", NewTaskForm);
  </script>