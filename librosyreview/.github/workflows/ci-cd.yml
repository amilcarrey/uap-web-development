name: CI/CD Pipeline

# Ejecutar el workflow cuando se haga push o pull request a main/master/libros
on:
  push:
    branches: [ main, master, libros ]
  pull_request:
    branches: [ main, master, libros ]

# Permisos necesarios para GitHub Container Registry
permissions:
  contents: read
  packages: write

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Descargar el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Configurar Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    # Instalar dependencias
    - name: Install dependencies
      run: |
        cd librosyreview
        npm ci
        
    # Ejecutar test
    - name: Run tests
      run: |
        cd librosyreview
        npm test -- --watchAll=false
        
    # Construir la aplicación
    - name: Build application
      run: |
        cd librosyreview
        npm run build
        
    # Desplegar a Vercel
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./librosyreview
        vercel-args: '--prod'

  # Nuevo job para Docker (solo en push a ramas principales)
  docker-build-and-push:
    runs-on: ubuntu-latest
    # Solo ejecutar en push (no en pull requests) y después de que pasen los tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/libros')
    needs: test-and-deploy
    
    steps:
    # Descargar el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Configurar Docker Buildx para builds avanzados
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # Login a GitHub Container Registry
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # Extraer metadatos para tags y labels
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          # Tag latest para rama principal
          type=raw,value=latest,enable={{is_default_branch}}
          # Tag con nombre de rama
          type=ref,event=branch
          # Tag con hash del commit (primeros 7 caracteres)
          type=sha,prefix={{branch}}-,format=short
          # Tag con fecha
          type=raw,value={{date 'YYYYMMDD-HHmmss'}}
    
    # Construir y publicar imagen Docker
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./librosyreview
        file: ./librosyreview/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Mostrar información de la imagen publicada
    - name: Image digest
      run: echo "Image published with digest: ${{ steps.build.outputs.digest }}"